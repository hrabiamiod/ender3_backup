[include mainsail.cfg]
#[include PIS.cfg]
# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v3.0. To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication/USART.

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

#====================================================================
# PROBE CONFIG
#====================================================================
[output_pin probe_enable]
pin: PA1
value: 0
[gcode_macro Probe_Deploy]
gcode:
 SET_PIN PIN=probe_enable VALUE=1
[gcode_macro Probe_Stow]
gcode:
 SET_PIN PIN=probe_enable VALUE=0
[probe]
pin: ^!PC14 ## For V1 version, set to ^PC14 for high-level trigger; for V2 version, set to ^!PC14 for low-level trigger.
deactivate_on_each_sample: False
x_offset: -44.2 # Actual offset of the MicroProbe installation
y_offset: -1.0 # Actual offset of the MicroProbe installation
#z_offset: -5
speed: 5.0
activate_gcode:
 Probe_Deploy
 G4 P500 # Allow 500 milliseconds for the probe to deploy
deactivate_gcode:
 Probe_Stow

[safe_z_home]
home_xy_position: 117.5,117.5 # Change coordinates to the center of your print bed
speed: 120
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 10.8, 24       #!!min and max co-ords are based on the probes location not the nozzle!!
mesh_max: 195.8, 219  #needs to be calibrated for your individual printer
probe_count: 5,5 #this is the number of probing points on X then Y axis
mesh_pps: 2,2
fade_start: 1
fade_end: 10
fade_target: 0

[bed_screws]
screw1: 73, 36
screw2: 240, 36
screw3: 240, 206
screw4: 73, 206

[screws_tilt_adjust]
screw1: 73, 36     #screw coordinates need to be measure for YOUR specific printer
screw1_name: front left screw
screw2: 240, 36
screw2_name: front right screw
screw3: 240, 206
screw3_name: rear right screw
screw4: 73, 206
screw4_name: rear left screw
horizontal_move_z: 10
speed: 120   #speed of travel moves between screws
screw_thread: CW-M3  #measure your bed screw m3=3mm / m4=4mm / m5=5mm

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 0
position_max: 240
homing_speed: 100

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: 0
position_max: 235
homing_speed: 100

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 250
position_min: -10


[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1
microsteps: 16
rotation_distance: 32.83
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 250

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.650
hold_current: 0.500
stealthchop_threshold: 999999

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 61.8
shaper_type_y = ei
shaper_freq_y = 43.8

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC4
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 100

[heater_fan controller_fan]
pin: PB15
heater: heater_bed
heater_temp: 45.0

[heater_fan nozzle_cooling_fan]
pin: PC7

[fan]
pin: PC6

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_34002A000A504B5735313920-if00
# serial: /dev/ttyAMA0
# restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 4000
max_z_velocity: 5
max_z_accel: 100
#dodane 16.03.2023 na podstawie https://teachingtechyt.github.io/calibration.html#accel
#max_accel: 400
#max_accel_to_decel: 400
#square_corner_velocity: 8.0

[virtual_sdcard]
path: /home/turbo/printer_data/gcodes

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

[display]
# RET6 12864 LCD
lcd_type: st7920
cs_pin: PB8
sclk_pin: PB9
sid_pin: PD6
encoder_pins: ^PA10, ^PA9
click_pin: ^!PA15

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100


[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[include timelapse.cfg]
#[include PIS.cfg]

[gcode_macro M205]
gcode:
  G4 P0

[gcode_macro clean_nozzle]
gcode:
  SAVE_GCODE_STATE NAME=clean_nozzle_state
  G90
  G0 Z2 F5000
  G0 X116.8 Y354 F10000
  {% for wipe in range(8) %}
    {% for coordinate in [(81.8,354),(116.8,354)] %}
      G0 X{coordinate[0]} Y{coordinate[1] - 0.5 * wipe} Z0 F6000
    {% endfor %}
  {% endfor %}
  G0 X116.8 Y354 Z2 F5000
  RESTORE_GCODE_STATE NAME=clean_nozzle_state

[include bed_level_mesh_macro.cfg]

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[gcode_macro PART_COOLING_FAN_ON]
gcode:
    M106 S255

[gcode_macro PART_COOLING_FAN_OFF]
gcode:
    M106 S0

# Do nozzle priming
[gcode_macro PRIME_EXTRUDER]
gcode:
    M117 Priming
    G92 E0
    G1 X10.1 Y20 Z2.0 F2000
    G1 X10.1 Y200 Z0.28 F2000.0 E15; Draw the first line
    G1 X10.4 Y200 Z0.28 F5000.0; Move to the side a little
    G1 X10.4 Y20.0 Z0.28 F2000.0 E30; Draw the second line
    G92 E0 
    G1 F2400 E-0.7 # Small retract to remove pressure
    G1 Z2.0 F3000 ;Move Z Axis up

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(0)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(0)|float %}
    G28 ;Home
    G29 ;Load Mesh Bed Level

    # Start bed heating
    M117 Heating bed
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # Home the printer
    G28
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z0.15 F300
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Start nozzle heating
    M117 Heating nozzle
    M104 S{EXTRUDER_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    # Prime line
    PRIME_EXTRUDER
    M117 Printing

[gcode_macro END_PRINT]
gcode:
    # Move nozzle away from print while retracting
    G91
    # Raise nozzle and retract
    G1 E-2 F1800
    G1 Z5 F3000
    # Move to absolute position
    G90
    G1 X10 Y200 F2000
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Disable steppers
    M84
    M117 JOB DONE!

[gcode_macro M600]
gcode:
   {% set X = 50 %}
   {% set Y = 0 %}
   {% set Z = 10 %}
   SAVE_GCODE_STATE NAME=M600_state
   PAUSE
   G91
   G1 E-.8 F2700
   G1 Z{Z}
   G90
   G1 X{X} Y{Y} F3000
   G91
   G1 E-50 F1000
   RESTORE_GCODE_STATE NAME=M600_state

[include moonraker_obico_macros.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.779
#*# pid_ki = 1.793
#*# pid_kd = 115.474
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 70.251
#*# pid_ki = 0.887
#*# pid_kd = 1390.979
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.003750, 0.020000, -0.016250
#*# 	-0.043750, 0.015000, -0.007500
#*# 	-0.012500, 0.012500, -0.016250
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 78.75999999999999
#*# max_x = 148.75
#*# min_y = 83.56
#*# max_y = 131.21
#*#
#*# [probe]
#*# z_offset = 0.745
